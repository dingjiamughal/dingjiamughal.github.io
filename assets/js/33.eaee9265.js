(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{103:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),t._m(3),s("p",[t._v("子组件传递参数给父组件：")]),t._m(4),s("p",[s("hello",{attrs:{father:"fathera"},on:{clickbtn:t.incrementTotal}}),t._v("//事件名称\nmethods:{\nincrementTotal:function(){\n//do sth\n//doEvent when sonEvent touch\n}\n}")],1),t._m(5)])},[function(){var t=this.$createElement,n=this._self._c||t;return n("h1",{attrs:{id:"vue父组件和子组件的传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue父组件和子组件的传递","aria-hidden":"true"}},[this._v("#")]),this._v(" Vue父组件和子组件的传递")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"father-to-child"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#father-to-child","aria-hidden":"true"}},[this._v("#")]),this._v(" father To child")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v('父组件传递参数给子组件：father="this\'s fatheraaaaa"\n子组件接收father的值：props:["father"] 通过'),n("code",[this._v("双花括号father")]),this._v("来展示数据：this's fatheraaaaa")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h3",{attrs:{id:"child-to-father"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#child-to-father","aria-hidden":"true"}},[this._v("#")]),this._v(" child To father")])},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("v"),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("click"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"clickbtn"')]),t._v("\nmethods"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  clickbtn"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("//do sth")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("$emit")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'clickbtn'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token comment"}},[t._v("//别的照旧，这条语句表示传递方法给father")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token template-string"}},[s("span",{attrs:{class:"token string"}},[t._v("``")])]),t._v("`js\n父组件接收事件：\n")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('\n### 总结\n子组件传递给父组件一般为事件方法，如果不传递`$emit`方法名给外层的父组件，那么外层的父组件上用不了此方法。\nv-on:click="sonEvent"\nv-on:sonEvent="fatherAccept"\n父组件传递数据给子组件，以属性名为桥梁，属性值为传递的数据对象。\n')])])}],!1,null,null,null);n.default=e.exports}}]);